/*!
 * Bootstrap v4.4.1 (https://getbootstrap.com/)
 * Controls what elements of bootstrap are needed for the project build (If any).
 * note that while using bootstrap CSS may not be needed, but their functions, mixins,
 * and variable setup is extremely useful in any build.
 */
/*!
 * Settings
 */
/*!
 * Basic Style Items
 * - Reboot
 * - General text setup
 * - Images
 * - Grid Layout
 */
/*!
 * Componets
 */
/*!
 * Utilities=========
 * this file has been broken out in this main SCSS
 * to simplify setup of Bootstrap CSS selection
 */
/*!
 * BASE TEMPLATE Styles
 * Here you'll find all the styles for the base
 * level content that makes up the website.
 */
/* line 7, app/scss/general/_base.scss */
* {
  box-sizing: border-box; }

/* line 12, app/scss/general/_base.scss */
body.homepage .Header-branding {
  display: none; }

/* line 117, app/scss/general/_typhography.scss */
.text-left {
  text-align: left; }

/* line 120, app/scss/general/_typhography.scss */
.text-right {
  text-align: right; }

/* line 123, app/scss/general/_typhography.scss */
.text-center {
  text-align: center; }

/* =============================
// Typography
// ====-----*/
/* line 133, app/scss/general/_typhography.scss */
h1,
h2 {
  background: linear-gradient(0deg, transparent 18%, #fff 18%, #fff 70%, transparent 60%);
  display: inline; }
  /* line 138, app/scss/general/_typhography.scss */
  h1::after,
  h2::after {
    content: '\a';
    white-space: pre; }

/* line 151, app/scss/general/_typhography.scss */
h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
p a {
  background: linear-gradient(0deg, #b3fce4 0% 50%, transparent 50%);
  display: inline-block;
  padding: 0px 3px;
  margin: 0 -3px;
  transition: all 0.15s ease-out !important;
  border-bottom: none !important; }
  /* line 159, app/scss/general/_typhography.scss */
  h1 a:hover,
  h2 a:hover,
  h3 a:hover,
  h4 a:hover,
  h5 a:hover,
  p a:hover {
    background: linear-gradient(0deg, #ff8 0% 8%, #1a1a1a 8% 10.5%, #ff8 10.5% 50%, transparent 50%);
    border-bottom: none !important; }

/* line 168, app/scss/general/_typhography.scss */
h1 a,
h2 a {
  display: inline;
  padding: 0px;
  margin: 0;
  background: linear-gradient(0deg, transparent 18%, #b3fce4 18% 27%, #1a1a1a 27% 29%, #b3fce4 29% 50%, transparent 50%); }
  /* line 175, app/scss/general/_typhography.scss */
  h1 a:hover,
  h2 a:hover {
    background: linear-gradient(0deg, transparent 18%, #ff8 18% 27%, #1a1a1a 27% 29%, #ff8 29% 50%, transparent 50%);
    color: black; }

@media (min-width: 640px) {
  /* line 183, app/scss/general/_typhography.scss */
  h1 a,
  h2 a {
    background: linear-gradient(0deg, transparent 18%, #b3fce4 18% 27%, #1a1a1a 27% 28%, #b3fce4 28% 50%, transparent 50%); }
    /* line 187, app/scss/general/_typhography.scss */
    h1 a:hover,
    h2 a:hover {
      background: linear-gradient(0deg, transparent 18%, #ff8 18% 27%, #1a1a1a 27% 28%, #ff8 28% 50%, transparent 50%); } }

/*!
 * BUTTON styles
 *
 */
/* =============================
// Customized SquareSpace elements
// ====-----*/
/* line 25, app/scss/general/_buttons.scss */
.button, .button.sqs-system-button {
  position: relative;
  top: 0;
  left: 7px;
  border-radius: 3px !important;
  border: 3px solid #1a1a1a !important;
  box-shadow: -7px 7px 0 #1a1a1a;
  transition: all 0.15s linear !important; }
  /* line 17, app/scss/general/_buttons.scss */
  .button:hover, .button.sqs-system-button:hover {
    top: 7px;
    left: 0px;
    box-shadow: 0px 0px 0 #1a1a1a; }

/* line 33, app/scss/general/_buttons.scss */
.sqs-block-button-element {
  position: relative;
  top: 0;
  left: 7px;
  border-radius: 3px !important;
  border: 3px solid #1a1a1a !important;
  box-shadow: -7px 7px 0 #1a1a1a;
  transition: all 0.15s linear !important; }
  /* line 17, app/scss/general/_buttons.scss */
  .sqs-block-button-element:hover {
    top: 7px;
    left: 0px;
    box-shadow: 0px 0px 0 #1a1a1a; }

/* line 39, app/scss/general/_buttons.scss */
.sqs-block-button .sqs-block-button-element--large {
  padding: 17px 27px;
  font-size: 1.3em; }

/* line 45, app/scss/general/_buttons.scss */
.sqs-block-button .sqs-block-button-element--medium {
  padding: 14px 24px;
  font-size: 1.0em; }

/* line 51, app/scss/general/_buttons.scss */
.sqs-block-button .sqs-block-button-element--small {
  font-size: 0.8em;
  padding: 10px 17px; }

/* line 2, app/scss/general/_backgrounds.scss */
.fading-background {
  transition: background 0.5s ease-out; }

/* line 7, app/scss/general/_backgrounds.scss */
.fading-text-color h1, .fading-text-color h2, .fading-text-color h3, .fading-text-color h4, .fading-text-color h5, .fading-text-color h6, .fading-text-color p, .fading-text-color blockquote, .fading-text-color figcaption {
  transition: color 0.5s ease-out; }

/*!
 * Image styles
 *
 */
/*!
 *
 * Image Block Styles
 *
 */
/* line 16, app/scss/general/_images.scss */
.image-block-v2.design-layout-collage .image-card-wrapper .image-card {
  border: 3px solid #1a1a1a;
  box-shadow: -7px 7px #a1a1a1;
  border-radius: 5px; }

/* line 26, app/scss/general/_inputs.scss */
.form-wrapper .field-list .field .field-element {
  padding: 12px;
  margin: 6px 0 4px;
  border: 2px solid #ccc;
  background: #fafafa;
  color: #000;
  font-family: sans-serif;
  font-size: 15px;
  line-height: normal;
  box-sizing: border-box;
  border-radius: 2px;
  border-top: none;
  border-left: none;
  border-right: none;
  transition: background 0.15s ease-in, border 0.25s ease-in !important; }
  /* line 17, app/scss/general/_inputs.scss */
  .form-wrapper .field-list .field .field-element:focus {
    border-bottom: 2px solid #000;
    outline: none; }

/* line 31, app/scss/general/_inputs.scss */
.form-wrapper .field-list .field.error .field-element {
  border-top: none;
  border-left: none;
  border-right: none;
  border-bottom: 2px solid #cc3b3b; }

/* line 42, app/scss/general/_inputs.scss */
select {
  padding: 12px;
  margin: 6px 0 4px;
  border: 2px solid #ccc;
  background: #fafafa;
  color: #000;
  font-family: sans-serif;
  font-size: 15px;
  line-height: normal;
  box-sizing: border-box;
  border-radius: 2px;
  border-top: none;
  border-left: none;
  border-right: none;
  transition: background 0.15s ease-in, border 0.25s ease-in !important; }
  /* line 17, app/scss/general/_inputs.scss */
  select:focus {
    border-bottom: 2px solid #000;
    outline: none; }

/* line 2, app/scss/general/_summary-blocks.scss */
.summary-title {
  font-weight: 600;
  font-family: adobe-caslon-pro; }

/*!
 * Build Components
 */
/* line 2, app/components/integration-fixes/_recaptcha-fix.scss */
.captcha-container, .captcha-container > div, .captcha-container iframe {
  max-width: 100% !important; }

/* line 1, app/components/integration-fixes/_ss-layout-fix.scss */
.sqs-layout-insert-block-menu .sqs-blockicon .label {
  overflow: visible !important; }

/* =============================
// Customized Header Styles
// ====-----*/
/* line 7, app/components/header/_header.scss */
body.homepage .Header-inner .Header-branding {
  display: none; }

/* line 11, app/components/header/_header.scss */
body.homepage .Header-inner [data-nc-container="top-left"] .Header-nav--secondary {
  display: none !important; }

/* line 15, app/components/header/_header.scss */
body.homepage .Header-inner [data-nc-container="top-center"] {
  flex-grow: 1.6; }

@media (min-width: 640px) {
  /* line 20, app/components/header/_header.scss */
  body.homepage .Header-inner [data-nc-container="top-left"] {
    display: none !important; } }

@media (min-width: 992px) {
  /* line 26, app/components/header/_header.scss */
  body.homepage .Header-inner [data-nc-container="top-left"] {
    display: flex !important; } }

/* line 37, app/components/header/_header.scss */
.Header .Header-nav .Header-nav-inner .Header-nav-item {
  margin: 0;
  padding-left: 1em;
  padding-right: 1em;
  border-right: 1.2px solid #1a1a1a; }
  /* line 43, app/components/header/_header.scss */
  .Header .Header-nav .Header-nav-inner .Header-nav-item:last-child {
    border-right: none; }

@media (min-width: 992px) {
  /* line 50, app/components/header/_header.scss */
  .Header .Header-nav .Header-nav-inner .Header-nav-item {
    padding-left: 1.6em;
    padding-right: 1.6em; } }

@media (min-width: 640px) {
  /* line 60, app/components/header/_header.scss */
  .Header .Header-inner [data-nc-container="top-right"] {
    display: none !important; } }

@media (min-width: 992px) {
  /* line 68, app/components/header/_header.scss */
  .Header .Header-inner [data-nc-container="top-right"] {
    display: flex !important; } }

/* line 75, app/components/header/_header.scss */
.Mobile-bar-branding {
  font-size: 14px !important; }

/* =============================
// Footer styles
// ====-----*/
/* line 6, app/components/footer/_footer.scss */
.Footer h1,
.Footer h2 {
  background: none; }

/* line 11, app/components/footer/_footer.scss */
.Footer__MainTitle {
  text-align: center;
  margin-bottom: -20px; }

/* line 16, app/components/footer/_footer.scss */
.Footer-inner {
  overflow: visible !important;
  max-width: 100% !important; }

/* line 24, app/components/footer/_footer.scss */
.Footer .sqs-alternate-block-style-container .newsletter-block .newsletter-form {
  margin-top: -15px; }
  /* line 27, app/components/footer/_footer.scss */
  .Footer .sqs-alternate-block-style-container .newsletter-block .newsletter-form .newsletter-form-body {
    display: inline-block;
    width: auto;
    position: relative; }
  /* line 33, app/components/footer/_footer.scss */
  .Footer .sqs-alternate-block-style-container .newsletter-block .newsletter-form-field-element {
    border-radius: 3px;
    background-color: transparent;
    border-top: none;
    border-left: transparent;
    border-right: transparent;
    border-bottom: 2px solid #a1a1a1; }
  /* line 42, app/components/footer/_footer.scss */
  .Footer .sqs-alternate-block-style-container .newsletter-block .newsletter-form-button {
    background: none !important;
    border: 0px solid transparent !important;
    padding: 0;
    color: inherit; }
    /* line 48, app/components/footer/_footer.scss */
    .Footer .sqs-alternate-block-style-container .newsletter-block .newsletter-form-button-label {
      display: inline-block;
      transition: all 0.2s ease-out;
      transform-origin: left; }
    /* line 54, app/components/footer/_footer.scss */
    .Footer .sqs-alternate-block-style-container .newsletter-block .newsletter-form-button-wrapper {
      width: auto;
      margin: 12px 0 0 0;
      padding: 6px 3px;
      border: none !important;
      margin-top: 0;
      position: absolute;
      bottom: 23px;
      right: 5px; }
      /* line 65, app/components/footer/_footer.scss */
      .Footer .sqs-alternate-block-style-container .newsletter-block .newsletter-form-button-wrapper:hover .newsletter-form-button-label {
        transform: scaleX(1.5); }
  /* line 73, app/components/footer/_footer.scss */
  .Footer .sqs-alternate-block-style-container .newsletter-block .newsletter-form-footnote p {
    opacity: 0.9;
    margin: 17px 0;
    line-height: 1.1;
    font-size: 18px !important;
    text-transform: uppercase; }

/* line 91, app/components/footer/_footer.scss */
.Footer-blocks--top .sqs-row:first-child .sqs-col-12 .image-block.sqs-block-image {
  max-width: 130px;
  padding: 20px;
  padding-top: 28.25px !important;
  padding-bottom: 28.25px !important;
  border: 1px solid #a1a1a1;
  background: #fff;
  border-radius: 50%;
  margin: -110px auto -40px;
  position: relative;
  z-index: 10; }

/* line 110, app/components/footer/_footer.scss */
.js--page-loaded .Footer {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat; }

/* line 1, app/components/home-page/_skills.scss */
.Skills {
  display: flex;
  font-family: adobe-caslon-pro;
  font-weight: 800;
  font-style: normal;
  font-size: 32px;
  letter-spacing: -.00685714px;
  line-height: 1.2em;
  text-transform: none; }
  @media (min-width: 640px) {
    /* line 1, app/components/home-page/_skills.scss */
    .Skills {
      font-size: 70px;
      letter-spacing: -.015em; } }
  /* line 19, app/components/home-page/_skills.scss */
  .Skills__Header {
    padding-right: 9px; }
    /* line 21, app/components/home-page/_skills.scss */
    .Skills__Header::after {
      content: none; }
    @media (min-width: 640px) {
      /* line 19, app/components/home-page/_skills.scss */
      .Skills__Header {
        padding-right: 18px; } }
  /* line 30, app/components/home-page/_skills.scss */
  .Skills__Wrapper {
    position: relative;
    overflow: hidden !important; }
  /* line 35, app/components/home-page/_skills.scss */
  .Skills__Item {
    position: absolute;
    top: 140%;
    white-space: nowrap; }
    /* line 40, app/components/home-page/_skills.scss */
    .Skills__Item--active {
      top: 0;
      transition: top 0.4s ease-out; }
    /* line 44, app/components/home-page/_skills.scss */
    .Skills__Item--deactive {
      top: -140%; }
    /* line 48, app/components/home-page/_skills.scss */
    .Skills__Item--placeholder {
      position: relative;
      display: inline;
      top: 0;
      color: transparent;
      background: linear-gradient(0deg, transparent 18%, #ffffff 18%, #ffffff 70%, transparent 60%);
      transition: padding 0.2s ease-out; }

/* line 2, app/components/home-page/_home.scss */
#home-intro {
  background-color: #a8a8a8;
  min-height: 80vh !important; }
  /* line 6, app/components/home-page/_home.scss */
  #home-intro .Index-page-content {
    padding-top: 30px;
    padding-bottom: 30px; }
  /* line 16, app/components/home-page/_home.scss */
  #home-intro .Drill__Wrapper {
    position: relative;
    width: 200px; }
  /* line 21, app/components/home-page/_home.scss */
  #home-intro .Drill__Arm {
    position: absolute;
    transform-origin: 95% 92%; }
  @media (min-width: 640px) {
    /* line 2, app/components/home-page/_home.scss */
    #home-intro {
      min-height: calc(100vh - 50px); }
      /* line 30, app/components/home-page/_home.scss */
      #home-intro .Index-page-content {
        padding-top: 40px;
        padding-bottom: 40px; } }

/* line 37, app/components/home-page/_home.scss */
#home-spiel {
  position: relative;
  background-repeat: no-repeat; }
  /* line 38, app/components/home-page/_home.scss */
  #home-spiel h2 {
    font-size: 2em; }
  /* line 20, app/scss/general/_backgrounds.scss */
  #home-spiel .code-block,
  #home-spiel .sqs-block-code-content,
  #home-spiel .sqs-row {
    position: static; }
  /* line 27, app/scss/general/_backgrounds.scss */
  #home-spiel .sqs-row .sqs-col-12 > * {
    position: relative;
    z-index: 9; }
    /* line 30, app/scss/general/_backgrounds.scss */
    #home-spiel .sqs-row .sqs-col-12 > *:last-child {
      position: static; }
  /* line 36, app/scss/general/_backgrounds.scss */
  #home-spiel .CustomBG {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-repeat: no-repeat;
    transition: background 0.4s ease; }
    /* line 45, app/scss/general/_backgrounds.scss */
    #home-spiel .CustomBG__Wrapper {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 1; }
    /* line 54, app/scss/general/_backgrounds.scss */
    #home-spiel .CustomBG__One {
      z-index: 8; }
    /* line 58, app/scss/general/_backgrounds.scss */
    #home-spiel .CustomBG__Two {
      z-index: 7; }
    /* line 62, app/scss/general/_backgrounds.scss */
    #home-spiel .CustomBG__Three {
      z-index: 6; }
    /* line 66, app/scss/general/_backgrounds.scss */
    #home-spiel .CustomBG__Four {
      z-index: 5; }
    /* line 70, app/scss/general/_backgrounds.scss */
    #home-spiel .CustomBG__Five {
      z-index: 4; }
    /* line 74, app/scss/general/_backgrounds.scss */
    #home-spiel .CustomBG__Six {
      z-index: 3; }
    /* line 78, app/scss/general/_backgrounds.scss */
    #home-spiel .CustomBG__Seven {
      z-index: 2; }
    /* line 82, app/scss/general/_backgrounds.scss */
    #home-spiel .CustomBG__Eight {
      z-index: 1; }
  /* line 44, app/components/home-page/_home.scss */
  #home-spiel .CustomBG__HK {
    background-size: contain;
    background-position: left top; }
  /* line 49, app/components/home-page/_home.scss */
  #home-spiel .CustomBG__Note {
    background-size: auto 80%;
    background-position: left bottom; }
  /* line 54, app/components/home-page/_home.scss */
  #home-spiel .CustomBG__Women {
    background-position: -50px bottom;
    background-size: 500px; }
  /* line 59, app/components/home-page/_home.scss */
  #home-spiel .CustomBG__TornPap {
    background-position: left top;
    background-size: 250px auto; }
  /* line 64, app/components/home-page/_home.scss */
  #home-spiel .CustomBG__ScrapPap {
    background-position: right bottom;
    background-size: 200px auto; }
  @media (min-width: 640px) {
    /* line 72, app/components/home-page/_home.scss */
    #home-spiel h2 {
      font-size: 3em; }
    /* line 80, app/components/home-page/_home.scss */
    #home-spiel .CustomBG__Note {
      background-size: auto 85%; }
    /* line 84, app/components/home-page/_home.scss */
    #home-spiel .CustomBG__Women {
      background-position: left bottom;
      background-size: 600px; } }
  @media (min-width: 992px) {
    /* line 114, app/components/home-page/_home.scss */
    #home-spiel h2 {
      font-size: 3.2em; }
    /* line 121, app/components/home-page/_home.scss */
    #home-spiel .CustomBG__Note {
      background-size: auto 86%; }
    /* line 125, app/components/home-page/_home.scss */
    #home-spiel .CustomBG__Women {
      background-position: left bottom;
      background-size: 800px; }
    /* line 130, app/components/home-page/_home.scss */
    #home-spiel .CustomBG__TornPap {
      background-size: 300px auto; }
    /* line 134, app/components/home-page/_home.scss */
    #home-spiel .CustomBG__ScrapPap {
      background-size: 285px auto; } }
  @media (min-width: 1200px) {
    /* line 142, app/components/home-page/_home.scss */
    #home-spiel .CustomBG__HK {
      background-size: 50%;
      background-position: -50px bottom; }
    /* line 147, app/components/home-page/_home.scss */
    #home-spiel .CustomBG__Note {
      background-size: auto 92%; }
    /* line 151, app/components/home-page/_home.scss */
    #home-spiel .CustomBG__Women {
      background-position: 40% bottom;
      background-size: auto 87%; }
    /* line 156, app/components/home-page/_home.scss */
    #home-spiel .CustomBG__TornPap {
      background-size: 30% auto; }
    /* line 160, app/components/home-page/_home.scss */
    #home-spiel .CustomBG__ScrapPap {
      background-size: 32% auto; } }

/* line 167, app/components/home-page/_home.scss */
#home-services {
  background-color: #e4faeb !important;
  position: relative;
  z-index: 3;
  overflow: visible; }
  /* line 172, app/components/home-page/_home.scss */
  #home-services::after {
    content: '';
    position: absolute;
    top: -9.5%;
    left: 0;
    bottom: 35px;
    right: 0;
    background-image: url("https://static1.squarespace.com/static/5eb0dff70de9a96357cc7466/t/5eb427bd1e357602a51fd271/1588864965241/Dive-in.png");
    background-repeat: no-repeat;
    background-size: auto 98%;
    background-position: bottom right; }
    @media (max-width: 767.98px) {
      /* line 172, app/components/home-page/_home.scss */
      #home-services::after {
        background-size: auto 88%;
        transform: translate(5%, -17%); } }
  /* line 190, app/components/home-page/_home.scss */
  #home-services .Index-page-content {
    position: relative;
    z-index: 2; }
  /* line 195, app/components/home-page/_home.scss */
  #home-services h2 {
    font-weight: 400;
    letter-spacing: .02em;
    line-height: 1.2em;
    word-break: break-word;
    white-space: normal !important;
    -webkit-hyphens: auto;
        -ms-hyphens: auto;
            hyphens: auto; }
  @media (min-width: 640px) {
    /* line 205, app/components/home-page/_home.scss */
    #home-services h2 {
      font-size: 40px; } }
  @media (min-width: 768px) {
    /* line 209, app/components/home-page/_home.scss */
    #home-services h2 {
      font-size: 50px;
      line-height: 1.5em; } }
  @media (min-width: 992px) {
    /* line 167, app/components/home-page/_home.scss */
    #home-services {
      background-size: auto 95%; }
      /* line 217, app/components/home-page/_home.scss */
      #home-services h2 {
        font-size: 80px; } }

/* line 2, app/components/intro-page/_intro.scss */
#intro-banner {
  overflow: visible;
  position: relative;
  background-repeat: no-repeat; }
  /* line 5, app/components/intro-page/_intro.scss */
  #intro-banner h1,
  #intro-banner h2,
  #intro-banner h3 {
    color: #1a1a1a; }
  /* line 11, app/components/intro-page/_intro.scss */
  #intro-banner h1 {
    font-size: 3.5em; }
  /* line 20, app/scss/general/_backgrounds.scss */
  #intro-banner .code-block,
  #intro-banner .sqs-block-code-content,
  #intro-banner .sqs-row {
    position: static; }
  /* line 27, app/scss/general/_backgrounds.scss */
  #intro-banner .sqs-row .sqs-col-12 > * {
    position: relative;
    z-index: 9; }
    /* line 30, app/scss/general/_backgrounds.scss */
    #intro-banner .sqs-row .sqs-col-12 > *:last-child {
      position: static; }
  /* line 36, app/scss/general/_backgrounds.scss */
  #intro-banner .CustomBG {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-repeat: no-repeat;
    transition: background 0.4s ease; }
    /* line 45, app/scss/general/_backgrounds.scss */
    #intro-banner .CustomBG__Wrapper {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 1; }
    /* line 54, app/scss/general/_backgrounds.scss */
    #intro-banner .CustomBG__One {
      z-index: 8; }
    /* line 58, app/scss/general/_backgrounds.scss */
    #intro-banner .CustomBG__Two {
      z-index: 7; }
    /* line 62, app/scss/general/_backgrounds.scss */
    #intro-banner .CustomBG__Three {
      z-index: 6; }
    /* line 66, app/scss/general/_backgrounds.scss */
    #intro-banner .CustomBG__Four {
      z-index: 5; }
    /* line 70, app/scss/general/_backgrounds.scss */
    #intro-banner .CustomBG__Five {
      z-index: 4; }
    /* line 74, app/scss/general/_backgrounds.scss */
    #intro-banner .CustomBG__Six {
      z-index: 3; }
    /* line 78, app/scss/general/_backgrounds.scss */
    #intro-banner .CustomBG__Seven {
      z-index: 2; }
    /* line 82, app/scss/general/_backgrounds.scss */
    #intro-banner .CustomBG__Eight {
      z-index: 1; }
  /* line 16, app/components/intro-page/_intro.scss */
  #intro-banner .FloatImg {
    position: absolute;
    transition: all 0.4s ease; }
    /* line 20, app/components/intro-page/_intro.scss */
    #intro-banner .FloatImg__Dots {
      top: 0;
      bottom: 0;
      left: 0;
      width: 50%;
      background-size: cover;
      background-position: left center;
      overflow: hidden; }
    /* line 30, app/components/intro-page/_intro.scss */
    #intro-banner .FloatImg__TopScribble {
      transform: translateX(-50%);
      left: 30%;
      top: 0;
      width: 150px; }
    /* line 37, app/components/intro-page/_intro.scss */
    #intro-banner .FloatImg__Papers {
      bottom: 0;
      right: 0;
      transform: translateX(40%);
      height: 100%; }
    /* line 44, app/components/intro-page/_intro.scss */
    #intro-banner .FloatImg__Keyboard {
      left: 0;
      top: 15%;
      transform: translateX(-45%);
      width: 50%;
      max-width: 600px; }
    /* line 52, app/components/intro-page/_intro.scss */
    #intro-banner .FloatImg__SideScribble {
      transform: translate(-50%, -50%);
      top: 88%;
      right: 11%;
      min-width: 120px;
      width: 16%;
      max-width: 450px; }
    /* line 61, app/components/intro-page/_intro.scss */
    #intro-banner .FloatImg__Earth {
      top: 60%;
      right: 0;
      transform: translate(20%, -50%);
      height: 65%; }
    /* line 68, app/components/intro-page/_intro.scss */
    #intro-banner .FloatImg__Cloud {
      bottom: 0;
      left: 22%;
      transform: translate(-50%, 40%);
      min-width: 110px;
      width: 20%;
      max-width: 440px; }
    /* line 77, app/components/intro-page/_intro.scss */
    #intro-banner .FloatImg__Mushroom {
      bottom: 0;
      left: 15%;
      transform: translateX(-50%);
      min-width: 140px;
      width: 19%;
      max-width: 540px; }
  @media (min-width: 640px) {
    /* line 89, app/components/intro-page/_intro.scss */
    #intro-banner h1 {
      font-size: 6em; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
